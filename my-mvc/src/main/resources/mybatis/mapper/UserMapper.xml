<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my.test.mapper.UserMapper">
  <!-- 用户的角色 -->
  <resultMap type="Role" id="roleOfUser" autoMapping="true">
  	<id property="id" column="rid"/>
  	<result property="code" column="r_code"/>
  	<result property="name" column="r_name"/>
  	<result property="remark" column="r_remark"/>
  </resultMap>
 
  <resultMap id="BaseResultMap" type="my.test.pojo.User" autoMapping="true">
   
    <id column="id" jdbcType="BIGINT" property="id" />
    
    <collection property="roles" javaType="Arraylist" ofType="Role" column="id" resultMap="roleOfUser" />
    
  </resultMap>
  
  <sql id="Base_Column_List">
    id, code, name, password, mobile, email,state, create_user, create_time,
    last_modified_user, last_modified_time, remark
  </sql>
  
  <sql id="user_role_Column_List">
    t1.id, t1.code, t1.name, t1.password, t1.mobile, t1.email,
    t3.id AS "rid",t3.code AS "r_code",t3.name AS "r_name",t3.remark AS "r_remark"
  </sql>
  <!-- 查询出所有的用户，但是不查询用户的角色 -->
  <select id="selectAll" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from sys_user
    where id != 1
  </select>
  
  <!-- 根据Code查询用户，同时查询出对应的角色 -->
  <select id="selectUserByCode" resultMap="BaseResultMap">
    select 
    <include refid="user_role_Column_List" />
    from sys_user t1
    inner join sys_user_role t2 on t1.id = t2.user_id
    inner join sys_role t3 on t2.role_id = t3.id
    where t1.code = #{code}
  </select>
  
  <!-- 根据id查询用户，同时查询出对应的角色 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
     <include refid="user_role_Column_List" />
     from sys_user t1
    inner join sys_user_role t2 on t1.id = t2.user_id
    inner join sys_role t3 on t2.role_id = t3.id
    where t1.id = #{id}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <!-- 给用户分配角色 -->
  <insert id="insertUserRole">
  	insert into sys_user_role (user_id,role_id) values(#{id},#{rid})
  </insert>
  
  <insert id="insert" parameterType="my.test.pojo.User">
    insert into sys_user (id, code, name, 
      password, mobile, email, 
      state, create_user, 
      create_time, last_modified_user, last_modified_time, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifiedUser,jdbcType=VARCHAR}, #{lastModifiedTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="my.test.pojo.User">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastModifiedUser != null">
        last_modified_user,
      </if>
      <if test="lastModifiedTime != null">
        last_modified_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedUser != null">
        #{lastModifiedUser,jdbcType=VARCHAR},
      </if>
      <if test="lastModifiedTime != null">
        #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  <update id="updateByPrimaryKeySelective" parameterType="my.test.pojo.User">
    update sys_user
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedUser != null">
        last_modified_user = #{lastModifiedUser,jdbcType=VARCHAR},
      </if>
      <if test="lastModifiedTime != null">
        last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="my.test.pojo.User">
    update sys_user
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modified_user = #{lastModifiedUser,jdbcType=VARCHAR},
      last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>